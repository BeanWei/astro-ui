---
import type { ComponentProps } from 'astro/types'
import { type ButtonVariantProps, button } from '../../variants/button'
import { Primitive } from '../primitive'

interface Props extends ComponentProps<typeof Primitive>, ButtonVariantProps {}

const {
	as = 'button',
	asChild = false,
	variant,
	size,
	class: className,
	...restProps
} = Astro.props
---

<Primitive
  role="button"
  {...restProps}
  as={as}
  asChild={asChild}
  class={button({ variant, size, className: `${className || ' [&[data-state=loading]>[data-part=button-spinner]]:inline'} `.trim() })}
  data-part="button-root"
>
  {!asChild && (
    <slot name="spinner">
      <svg data-part="button-spinner" class="hidden h-4 w-4 animate-spin" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12a9 9 0 1 1-6.219-8.56"/></svg>
    </slot>
  )}
	<slot />
</Primitive>
