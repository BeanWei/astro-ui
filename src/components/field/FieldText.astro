---
import { scope } from 'simple:scope'
import type { HTMLAttributes } from 'astro/types'
import useId from '../../utils/useId'

interface Props extends HTMLAttributes<'input'> {
	label?: string
	description?: string
}

const { type, label, description, class: className, ...restProps } = Astro.props

const fieldId = useId(scope())

const labelHtml = Astro.slots.has('label') ? await Astro.slots.render('label') : label

const hasPrefix = Astro.slots.has('prefix')
const hasSuffix = Astro.slots.has('suffix')
const prefixHtml = hasPrefix ? await Astro.slots.render('prefix') : ''
const suffixHtml = hasSuffix ? await Astro.slots.render('suffix') : ''

const descriptionHtml = Astro.slots.has('description')
	? await Astro.slots.render('description')
	: description
---

<div class="space-y-2" data-part="field-root">
  {labelHtml && (
    <label
      data-part="field-label"
      for={fieldId}
      class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
    >
      <Fragment set:html={labelHtml} />
    </label>
  )}
  <div class="relative">
    <input
      {...restProps}
      data-part="field-text"
      id={fieldId}
      type={type}
      class:list={[
        'peer flex h-9 w-full rounded-lg border border-input bg-background px-3 py-2 text-sm text-foreground shadow-sm shadow-black/5 transition-shadow placeholder:text-muted-foreground/70 focus-visible:border-ring focus-visible:outline-none focus-visible:ring-[3px] focus-visible:ring-ring/20 disabled:cursor-not-allowed disabled:opacity-50',
        type === 'search' ? '[&::-webkit-search-cancel-button]:appearance-none [&::-webkit-search-decoration]:appearance-none [&::-webkit-search-results-button]:appearance-none [&::-webkit-search-results-decoration]:appearance-none' : null,
        type === 'file' ? 'p-0 pr-3 italic text-muted-foreground/70 file:me-3 file:h-full file:border-0 file:border-r file:border-solid file:border-input file:bg-transparent file:px-3 file:text-sm file:font-medium file:not-italic file:text-foreground' : null,
        hasPrefix ? 'ps-9' : null,
        hasSuffix ? 'pe-9' : null,
        className,
      ]}
    />
    {hasPrefix && (
      <div
        class="pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-3 text-sm text-muted-foreground peer-disabled:opacity-50"
        data-part="field-text-prefix"
      >
        <Fragment set:html={prefixHtml} />
      </div>
    )}
    {hasSuffix && (
      <div
        class="pointer-events-none absolute inset-y-0 end-0 flex items-center justify-center pe-3 text-sm text-muted-foreground peer-disabled:opacity-50"
        data-part="field-text-suffix"
      >
        <Fragment set:html={suffixHtml} />
      </div>
    )}
  </div>
  {descriptionHtml && (
    <p
      data-part="field-description"
      class="mt-2 text-xs text-muted-foreground"
      role="region"
      aria-live="polite"
    >
      <Fragment set:html={descriptionHtml} />
    </p>
  )}
</div>
